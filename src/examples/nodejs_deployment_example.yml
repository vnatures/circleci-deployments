description: >
  Example of a full NodeJS (Typescript) + PostgresSQL DB sequelize migration deployment.
  Based on premade AWS resources.

usage:
  version: 2.1
  orbs:
    versatile: versatile/circleci-deployments@1.0.0

  jobs:
  build:
    executor: versatile/default
    steps:
      - checkout
      - run: env
      - run:
          command: 'npm ci'
          name: 'Install Dependencies'
      - run:
          command: 'npm run build'
          name: 'Build app'
      - persist_to_workspace:
          root: ~/project
          paths:
            - build
            - config
            - Dockerfile
            - package.json
            - package-lock.json
            - .npmrc
            - env.js
            - node_modules

  run-migrations:
    executor: versatile/default
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/setup
      - attach_workspace:
          at: ~/project
      - run: env
      - run: node env.js
      - run:
          command: 'npm run db:prepare'
          name: 'Running DB Migrations'

  workflows:
    deploy-staging:
      jobs:
        - build:
            context: base-context
            filters:
              branches:
                ignore:
                  - main
                  - master
        - versatile/push-docker-image:
            workspace-root: ~/project
            context:
              - base-context
              - staging
            requires:
              - build
        - slack/on-hold:
            context: slack-secrets
            requires:
              - versatile/push-docker-image
        - approve-deploy:
            type: approval
            release-timeout: 600
            requires:
              - slack/on-hold
              - versatile/push-docker-image
        - run-migrations:
            context:
              - base-context
              - staging
            requires:
              - approve-deploy
        - versatile/deploy-docker-image:
            name: deploy-docker-image-staging
            requires:
              - run-migrations
            context:
              - base-context
              - staging
              - slack-secrets
    deploy-production:
      jobs:
        - build:
            context: base-context
            filters:
              branches:
                only:
                  - main
                  - master
        - versatile/push-docker-image:
            workspace-root: ~/project
            context:
              - base-context
              - production
            requires:
              - build
        - run-migrations:
            context:
              - base-context
              - production
            requires:
              - versatile/push-docker-image
        - versatile/deploy-docker-image:
            name: deploy-docker-image-production-spot
            cluster-name: '${ECS_SPOT_CLUSTER_NAME}'
            requires:
              - run-migrations
            context:
              - base-context
              - production
              - slack-secrets
        - versatile/deploy-docker-image:
            name: deploy-docker-image-production-on-demand
            cluster-name: '${ECS_ON_DEMAND_CLUSTER_NAME}'
            requires:
              - run-migrations
              - deploy-docker-image-production-spot
            context:
              - base-context
              - production
              - slack-secrets
